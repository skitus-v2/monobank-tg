require('dotenv').config();
const express = require('express');
const bodyParser = require('body-parser');
const { Telegraf } = require('telegraf');
const packageInfo = require('./package.json');

const app = express();
app.use(bodyParser.json());

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
const MONOBANK_TOKEN_SKITUS = process.env.MONOBANK_TOKEN_SKITUS;
const MONOBANK_TOKEN_BETA = process.env.MONOBANK_TOKEN_BETA;
const bot = new Telegraf(TELEGRAM_TOKEN);
const chatId = process.env.CHAT_ID; // –û–¥–∏–Ω –æ–±—â–∏–π chat ID –¥–ª—è –æ–±–æ–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
const PORT = process.env.PORT || 3000;

let fetch;

(async () => {
    fetch = (await import('node-fetch')).default;

    // Webhook –¥–ª—è Monobank –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ê—Ä—Ç—É—Ä–∞
    app.post('/monobank-webhook-artur', (req, res) => {
        const transactions = req.body.data.statementItem;

        transactions.forEach(transaction => {
            const message = `
            üè¶ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (–ê—Ä—Ç—É—Ä):
            - –°—É–º–º–∞: ${transaction.amount / 100} ${transaction.currencyCode}
            - –û–ø–∏—Å–∞–Ω–∏–µ: ${transaction.description}
            - –î–∞—Ç–∞: ${new Date(transaction.time * 1000).toLocaleString()}
            `;
            bot.telegram.sendMessage(chatId, message);
        });

        res.sendStatus(200);
    });

    // Webhook –¥–ª—è Monobank –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –°–∞—à–∏
    app.post('/monobank-webhook-sasha', (req, res) => {
        const transactions = req.body.data.statementItem;

        transactions.forEach(transaction => {
            const message = `
            üè¶ –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è (–°–∞—à–∞):
            - –°—É–º–º–∞: ${transaction.amount / 100} ${transaction.currencyCode}
            - –û–ø–∏—Å–∞–Ω–∏–µ: ${transaction.description}
            - –î–∞—Ç–∞: ${new Date(transaction.time * 1000).toLocaleString()}
            `;
            bot.telegram.sendMessage(chatId, message);
        });

        res.sendStatus(200);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è GET-–∑–∞–ø—Ä–æ—Å–∞
    app.get('/', (req, res) => {
        res.json({
            version: packageInfo.version,
            server: "monobank-telegram-finance"
        });
    });

    // –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    app.listen(PORT, () => {
        console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    });

    // –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞
    bot.start((ctx) => ctx.reply('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!'));
    bot.launch();

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Webhook –≤ Monobank –¥–ª—è –ê—Ä—Ç—É—Ä–∞
    const setupWebhookArtur = async () => {
        const url = `https://api.monobank.ua/personal/webhook`;
        const webhookUrl = 'https://your-server-url/monobank-webhook-artur'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL —Å–µ—Ä–≤–µ—Ä–∞

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'X-Token': MONOBANK_TOKEN_SKITUS,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ webHookUrl: webhookUrl }),
            });

            if (response.ok) {
                console.log('Webhook —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –ê—Ä—Ç—É—Ä–∞');
            } else {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhook –¥–ª—è –ê—Ä—Ç—É—Ä–∞:', await response.text());
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhook –¥–ª—è –ê—Ä—Ç—É—Ä–∞:', error);
        }
    };

    // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Webhook –≤ Monobank –¥–ª—è –°–∞—à–∏
    const setupWebhookSasha = async () => {
        const url = `https://api.monobank.ua/personal/webhook`;
        const webhookUrl = 'https://your-server-url/monobank-webhook-sasha'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL —Å–µ—Ä–≤–µ—Ä–∞

        try {
            const response = await fetch(url, {
                method: 'POST',
                headers: {
                    'X-Token': MONOBANK_TOKEN_BETA,
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ webHookUrl: webhookUrl }),
            });

            if (response.ok) {
                console.log('Webhook —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ –°–∞—à–∏');
            } else {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhook –¥–ª—è –°–∞—à–∏:', await response.text());
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhook –¥–ª—è –°–∞—à–∏:', error);
        }
    };

    // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ webhook
    setupWebhookArtur();
    setupWebhookSasha();
})();
